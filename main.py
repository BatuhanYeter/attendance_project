# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import face_recognition
import numpy as np
import gui
import ctypes
import uuid, os
from PyQt5 import QtCore, QtGui, QtWidgets
import db
from PyQt5.QtCore import pyqtSlot
from tkinter import filedialog, messagebox
import cv2
import project

class RegisterWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.setObjectName("mainWindow")
        self.resize(262, 349)
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(120, 50, 113, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(120, 80, 113, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(120, 110, 113, 20))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(120, 140, 113, 20))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_5.setGeometry(QtCore.QRect(120, 170, 113, 20))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_6.setGeometry(QtCore.QRect(120, 200, 113, 20))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(120, 230, 111, 22))
        self.comboBox.setObjectName("comboBox")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 50, 71, 21))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 80, 71, 21))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 110, 71, 21))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(20, 140, 71, 21))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(20, 170, 71, 16))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(20, 200, 71, 21))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(20, 230, 71, 21))
        self.label_7.setObjectName("label_7")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(50, 270, 161, 31))
        self.pushButton.setObjectName("pushButton")
        self.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 262, 21))
        self.menubar.setObjectName("menubar")
        self.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)
        
        data = db.getAddresses()
        address_choices = []
        for id, address in data:
            address_choices.append(address)
            
        self.comboBox.addItems(address_choices)    
        self.pushButton.clicked.connect(self.onClickRegister)
        
        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "Register"))
        self.label.setText(_translate("mainWindow", "First Name"))
        self.label_2.setText(_translate("mainWindow", "Last Name"))
        self.label_3.setText(_translate("mainWindow", "Age"))
        self.label_4.setText(_translate("mainWindow", "TCK"))
        self.label_5.setText(_translate("mainWindow", "Email"))
        self.label_6.setText(_translate("mainWindow", "Phone Number"))
        self.label_7.setText(_translate("mainWindow", "Address"))
        self.pushButton.setText(_translate("mainWindow", "Choose a Picture and Register"))

    def onClickRegister(self):
        self.firstName = self.lineEdit.text() 
        self.lastname = self.lineEdit_2.text()
        self.age = self.lineEdit_3.text()
        self.tck = self.lineEdit_4.text()
        self.email = self.lineEdit_5.text()
        self.phone_number = self.lineEdit_6.text()
        self.address = self.comboBox.currentText()
        
        path = "./images"
        address_id = db.getAddressIdByName(self.address)
        if self.lastname != "" and self.firstName != "" and self.age != "" and self.tck != "" and self.phone_number != "" and address_id != "":
            filename = filedialog.askopenfilename(initialdir = "/",title = "Select file",filetypes = (("jpeg files","*.jpg"),("all files","*.*")))
            img = cv2.imread(f'{filename}')
            # status = cv2.imwrite(f'{path}/{firstName+"_"+lastName}.jpg', img)
            photo_uuid = uuid.uuid4()
            status = cv2.imwrite(f'{path}/{photo_uuid}.jpg', img)
            
            print("address id: ", address_id)
            if status == True:
                result = db.create_user(self.lastname, self.firstName, self.age, self.tck, photo_uuid, self.email, self.phone_number, address_id)
                if result == 1:    
                    messagebox.showinfo("Registered", f'Welcome aboard, {self.firstName}!')
                else:
                    os.remove(f'{path}/{photo_uuid}.jpg')
                    messagebox.showerror("An error occured: ", result)
                # root.destroy()
            else:
                messagebox.showerror("Error", "Something went wrong while selecting picture!")
                # root.destroy()
        else:
            messagebox.showerror("Empty information", "Please fill all the requirements.")

class MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        
        
        self.setObjectName("MainWindow")
        self.resize(705, 494)
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.btnRegister = QtWidgets.QPushButton(self.centralwidget)
        self.btnRegister.setGeometry(QtCore.QRect(500, 30, 75, 23))
        self.btnRegister.setObjectName("btnRegister")
        
        
        
        self.btnStartSystem = QtWidgets.QPushButton(self.centralwidget)
        self.btnStartSystem.setGeometry(QtCore.QRect(50, 400, 75, 23))
        self.btnStartSystem.setObjectName("btnStartSystem")
        
        self.btnDelete = QtWidgets.QPushButton(self.centralwidget)
        self.btnDelete.setGeometry(QtCore.QRect(500, 60, 75, 23))
        self.btnDelete.setObjectName("btnDelete")
        
        self.btnCsvExtract = QtWidgets.QPushButton(self.centralwidget)
        self.btnCsvExtract.setGeometry(QtCore.QRect(500, 90, 75, 23))
        self.btnCsvExtract.setObjectName("btnCsvExtract")
        
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setEnabled(True)
        self.progressBar.setGeometry(QtCore.QRect(260, 190, 118, 23))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setTextVisible(False)
        self.progressBar.setObjectName("progressBar")
        self.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 705, 21))
        self.menubar.setObjectName("menubar")
        self.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)
        
        self.btnRegister.clicked.connect(self.openRegisterWindow)
        self.btnStartSystem.clicked.connect(self.startSystem)
        
        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btnRegister.setText(_translate("MainWindow", "Register"))
        self.btnStartSystem.setText(_translate("MainWindow", "Start System"))
        self.btnDelete.setText(_translate("MainWindow", "Delete"))
        self.btnCsvExtract.setText(_translate("MainWindow", "Extract Csv"))

    def openRegisterWindow(self, checked):
        self.w = RegisterWindow()
        self.w.show()
        
    def startSystem(self):
        project.startSystem()

        
import sys
    
if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    gui = MainWindow()
    gui.show()
    app.exec_()